<?xml version='1.0' encoding='utf-8'?>
<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)" GeneratedClassNamespace="DevCDRAgent.Properties" GeneratedClassName="Settings">
  <Profiles />
  <Settings>
    <Setting Name="Endpoint" Type="System.String" Scope="Application">
      <Value Profile="(Default)">https://devcdr.azurewebsites.net/Chat</Value>
    </Setting>
    <Setting Name="Instance" Type="System.String" Scope="Application">
      <Value Profile="(Default)">Test</Value>
    </Setting>
    <Setting Name="PSStatus" Type="System.String" Scope="Application">
      <Value Profile="(Default)">
function OS
{
	Get-CimInstance Win32_OperatingSystem
}


function RebootPending
{
	$FileRenamePending = $false;
	$ComponentRebootPending = if(test-path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending"){ $true } else { $false }
	try { if(@(((Get-ItemProperty("HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager")).$("PendingFileRenameOperations")) | Where-Object { $_ }).length -ne 0) { $FileRenamePending = $true }; } catch{}
	if($FileRenamePending -or $ComponentRebootPending) { return $true };
	return $false;
}


function UsersOnline
{
	$proc = @(Get-WmiObject win32_process -Filter "Name = 'explorer.exe'");
	if($proc.Length -gt 0) { return $true } else { return $false };
}

function GetMyID {
    $object = New-Object -TypeName PSObject
    $object | Add-Member -MemberType NoteProperty -Name "Domain" -Value ((get-wmiobject -ClassName "win32_ComputerSystem").Domain)
    $object | Add-Member -MemberType NoteProperty -Name "#Name" -Value ($env:computername) 
    $object | Add-Member -MemberType NoteProperty -Name "#UUID" -Value ((get-wmiobject -ClassName "win32_ComputerSystemProduct").UUID)
    return GetHash($object | ConvertTo-Json -Compress)
}

function GetHash([string]$txt) {
    return GetMD5($txt)
}

function GetMD5([string]$txt) {
    $md5 = new-object -TypeName System.Security.Cryptography.MD5CryptoServiceProvider
    $utf8 = new-object -TypeName System.Text.ASCIIEncoding
    return Base58(@(0xd5, 0x10) + $md5.ComputeHash($utf8.GetBytes($txt))) #To store hash in Miltihash format, we add a 0xD5 to make it an MD5 and an 0x10 means 10Bytes length
}

function GetSHA2_256([string]$txt) {
    $sha = new-object -TypeName System.Security.Cryptography.SHA256CryptoServiceProvider
    $utf8 = new-object -TypeName System.Text.ASCIIEncoding
    return Base58(@(0x12, 0x20) + $sha.ComputeHash($utf8.GetBytes($txt))) #To store hash in Miltihash format, we add a 0x12 to make it an SHA256 and an 0x20 means 32Bytes length
}

function Base58([byte[]]$data) {
    $Digits = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
    [bigint]$intData = 0
    for ($i = 0; $i -lt $data.Length; $i++) {
        $intData = ($intData * 256) + $data[$i]; 
    }
    [string]$result = "";
    while ($intData -gt 0) {
        $remainder = ($intData % 58);
        $intData /= 58;
        $result = $Digits[$remainder] + $result;
    }

    for ($i = 0; ($i -lt $data.Length) -and ($data[$i] -eq 0); $i++) {
        $result = '1' + $result;
    }

    return $result
}

$OS = (OS)
$UBR = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' -Name UBR).UBR
$object = New-Object -TypeName PSObject
$object | Add-Member -MemberType NoteProperty -Name "Hostname" -Value (hostname).ToUpper()
$object | Add-Member -MemberType NoteProperty -Name "id" -Value (GetMyID).ToUpper()
$object | Add-Member -MemberType NoteProperty -Name "Internal IP" -Value ((Test-Connection (hostname) -Count 1).IPV4Address.IPAddressToString)
$object | Add-Member -MemberType NoteProperty -Name "Last Reboot" -Value $OS.LastBootUpTime
$object | Add-Member -MemberType NoteProperty -Name "Reboot Pending" -Value (RebootPending)
$object | Add-Member -MemberType NoteProperty -Name "Users Online" -Value (UsersOnline)
$object | Add-Member -MemberType NoteProperty -Name "OS" -Value $OS.Caption
$object | Add-Member -MemberType NoteProperty -Name "Version" -Value ($OS.Version + '.' + $UBR)
$object | Add-Member -MemberType NoteProperty -Name "Arch" -Value $OS.OSArchitecture
$object | Add-Member -MemberType NoteProperty -Name "Lang" -Value $OS.OSLanguage
$object | ConvertTo-Json</Value>
    </Setting>
    <Setting Name="Groups" Type="System.String" Scope="Application">
      <Value Profile="(Default)">unknown</Value>
    </Setting>
    <Setting Name="StatusDelay" Type="System.Int32" Scope="Application">
      <Value Profile="(Default)">5000</Value>
    </Setting>
  </Settings>
</SettingsFile>