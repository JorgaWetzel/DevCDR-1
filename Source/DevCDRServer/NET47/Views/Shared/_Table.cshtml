<script type="text/javascript">
    $(document).ready(function () {
        var ajaxurl = '/DevCDR/GetData?Instance=@ViewData["Instance"].ToString()';

        var table = $('#test').DataTable({
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
            buttons: [
                {
                    text: '<span class="glyphicon glyphicon-ok-circle"></span>',
                    action: function () {
                        table.rows().select();
                    },
                    titleAttr: 'select All'
                },
                {
                    text: '<span class="glyphicon glyphicon-remove-circle"></span>',
                    action: function () {
                        table.rows().deselect();
                    },
                    titleAttr: 'select None'
                },
                {
                    extend: 'copyHtml5',
                    text: '<span class="glyphicon glyphicon-duplicate"></span>',
                    titleAttr: 'Copy',
                    exportOptions: {
                        rows: {
                            selected: true
                        }
                    }
                },
                {
                    text: '<span class="glyphicon glyphicon-floppy-save"></span>',
                    action: function (e, dt, button, config) {
                        var data = dt.buttons.exportData();

                        $.fn.dataTable.fileSave(
                            new Blob([JSON.stringify(data)]),
                            'Export.json'
                        );
                    },
                    titleAttr: 'Save as JSON',
                    exportOptions: {
                        rows: {
                            selected: true
                        }
                    }
                }
            ],
            "ajax": {
                "url": ajaxurl,
                "dataSrc": "data"
            },
            stateSave: true,
            deferRender: true,
            "columns": [
                { "data": "Hostname" },
                { "data": "Internal IP" },
                {
                    "data": "Last Reboot",
                    "render": function (data) {
                        var date = new Date(data);
                        return date.getFullYear() + '-' + (date.getMonth() + 1).pad(2) + '-' + date.getDate().pad(2) + ' ' + date.getHours().pad(2) + ':' + date.getMinutes().pad(2) + ':' + date.getSeconds().pad(2);
                    }
                },
                { "data": "Reboot Pending" },
                { "data": "Users Online" },
                { "data": "OS" },
                { "data": "Version" },
                { "data": "Arch" },
                { "data": "Lang" },
                { "data": "ScriptResult" },
                { "data": "Groups", "visible": false }
            ],
            rowId: 'Hostname',
            select: true,
            colReorder: true,
            dom: '<"top"Bi>frt<"bottom"lp><"clear">'
        });

        var groupurl = '/DevCDR/Groups?Instance=@ViewData["Instance"].ToString()';
        $.post(groupurl, "",
            function (data, status) {
                jQuery.each(data, function (i, val) {
                    $('<li><a href="#' + val + '" data-toggle="tab">' + val + '</a></li>').appendTo('#tabs');
                });
            });

    });

    $('#tabs').on('shown.bs.tab', function (e) {
        var group = e.target.hash
        $('#test').DataTable().search(e.target.hash.replace('#', '')).draw();
    })

    $(function () {
        var connection = $.hubConnection('@ViewData["Route"].ToString()');
        var HubProxy = connection.createHubProxy('@ViewData["Instance"].ToString()');
        var tTimer;
        var iCount = 0;
        var lastReload = new Date();
        HubProxy.on('newData', function (Name, Status) {
            //2s queue but 10s max
            if ((new Date() - lastReload) < 10000) { clearTimeout(tTimer); } else { lastReload = new Date(); iCount = 0 };
            //load first request
            if (iCount > 1) {
                tTimer = setTimeout(reloadData, 2000); //2s queue
                //console.log("set Timer");
            } else {
                reloadData();
            }
            iCount++;

        });
        connection.start()
            .done(function () {
                console.log('Now connected, connection ID=' + connection.id);
                HubProxy.invoke("JoinGroup", "web");
            })
            .fail(function () { console.log('Could not connect'); });
    });

    function reloadData() {
        //console.log("reload Data");
        var table = $('#test').DataTable();
        table.ajax.reload();
    }
    Number.prototype.pad = function (size) {
        var s = String(this);
        while (s.length < (size || 2)) { s = "0" + s; }
        return s;
    }
</script>